% iPoissonSpiketrainUncorrSquareWaved:
%     Produces synaptic exponential Poisson spiketrains, AND the
%     excitatory/inhibitory currents from said spike trains, in the fashion of a
%     regular synapse; the spiketrains are only present during the peak/"up"
%     portion of a unit-amplitude squarewave. In other words, the spikes are
%     only present when the squarewave allows it. They are "all-to-all"
%     connected, meaning every target cell receives from every spike train. The
%     total input to any one target cell is then divided by the total number of
%     source cells to "normalize" the current contribution, as is standard.
%
%     Because the spiketrain is multiplied by the squarewave, in order to
%     approximate the thalamus' perspective of the cortical Slow Wave
%     Oscillation, this is meant to be used in conjunction with an (identical
%     and in-phase) `iSquare.mech` mechanism (acting as the squarewave
%     depolarization of the UP state) to act as the spikes on top of the
%     depolarization of the UP states.
% Dependencies: Relies on "GeneratePoissonUncorr.m" though I'm not sure if that file
%     needs to be in just your DNSIM path, or the database itself, or either.
% Usage: Use it as an autapse connection: e.g. "TC-TC".
% Reference: see Ben Poletta-Pittman. This was built using
%     "dend_iMultiPoissonExp.txt" as a template, though I may have altered some of
%     the "tau_XXX" time constants.
% Tags: synapse, connection

% Note that due to the weird EPSP waveform of the artificial AMPA spike train
% generated by the following mechanism, the "activity variable" of each of the
% AMPA spikes, which is usually from 0 to 1 in traditional neural modeling, is
% NOT 0 to 1 but sometimes goes as high as 3. I have not yet recalibrated the
% waveform to use unit-activity-variable, so for now, the `g_esyn` that is the
% maximal conductance of the AMPAergic spikes is, in reality, somewhere up to 3x
% the number you assign to `g_esyn`. In other words, the "real" conductance of
% the current AMPA spikes are roughly 3x `g_esyn`, as a rule of thumb.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% what is going on with the rate and the time??? I have rate=2 and T=2000
% written down as producing 12 Hz, and that seems to be right, but how does that
% translate???

rate = 2
T = 2000
g_esyn = 1
E_esyn = 1
tau_i = 10
tau_1 = 1
N_einputs = 1
prob_cxn = 0.5

poisson_square_amp = 1
poisson_square_freq = 0.6

% Connectivity
% Randomly connected, with some probability of connection
netcon = rand(N_pre,N_post)<prob_cxn

% Functions
SquareWave(t) = poisson_square_amp./2 + poisson_square_amp./2.*square(2.*pi.*poisson_square_freq.*t./1000)
% Npop is the number of source? or target? cells, though it doesn't matter
%     which in an autapse. So if TC=100, then Npop=100
% The taus chosen are, I believe, from (Kleppe & Robinson, Biophys. J., 1999)
Ge = GeneratePoissonUncorr(N_pre, N_einputs, rate, tau_i, tau_1, 2, .5, T, dt)

% Don't forget the new apostrophe, since DynaSim has rotated matrices from DNSIM
% What is to be multipled by `netcon` is, for some specific time `t`, a vector
%   1 x <some population/cell number>
IPoissonSpiketrainUncorrSquareWaved(X,t) = g_esyn/N_pre.*((Ge(:,max(1,round(t/dt)))')*netcon).*(X-E_esyn).*SquareWave(t)

% Record all the things!
monitor functions

@current += -IPoissonSpiketrainUncorrSquareWaved(X,t)
